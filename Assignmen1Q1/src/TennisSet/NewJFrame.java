/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TennisSet;

//import  TennisSet.TennisGame.pointServer;
// static TennisSet.TennisGame.FinalScore;
//import static TennisSet.TennisGame.closeActionPerformed;
//import static TennisSet.TennisGame.serverCount;
import static TennisSet.NewJFrame.closeActionPerformed;
import static TennisSet.TennisSet.currentGame;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
//import java.awt.event.ActionEvent;
//import java.awt.event.KeyListener.*;
//import java.awt.event.ActionListener;
//import static java.lang.String.valueOf;
//import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JLabel;
//import sun.awt.resources.awt;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import javafx.scene.input.KeyCode;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JTextField;
/**
 *
 * @author mghazaly
 */
public class NewJFrame extends javax.swing.JFrame {
    public static String Server,Receiver;
    public String Scores1;
    public static TennisSet TennisSet;
    public static TennisGame Game;
    public static int serverInitialLength,receiverInitialLength;
    static int t = 0;
    static JFrame DisplayFrame = new JFrame();
    static  JTextField ErrMessage = new JTextField();
     static JButton Close = new JButton("Close");
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        textField1 = new java.awt.TextField();
        textField2 = new java.awt.TextField();
        continueButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        label1 = new java.awt.Label();
        firstServe = new java.awt.TextField();
        secondServe = new java.awt.TextField();
        thirdServe = new java.awt.TextField();
        fourthServe = new java.awt.TextField();
        fifthServe = new java.awt.TextField();
        sixthServe = new java.awt.TextField();
        seventhServe = new java.awt.TextField();
        eigthServe = new java.awt.TextField();
        ninthServe = new java.awt.TextField();
        tenthServe = new java.awt.TextField();
        eleventhServe = new java.awt.TextField();
        twelvthServe = new java.awt.TextField();
        thirteenthServe = new java.awt.TextField();
        fourteenthServe = new java.awt.TextField();
        fifteenthServe = new java.awt.TextField();
        sixteenthServe = new java.awt.TextField();
        seventeenthServe = new java.awt.TextField();
        nineteenthServe = new java.awt.TextField();
        eighteenthServe = new java.awt.TextField();
        twentiethServe = new java.awt.TextField();
        SET1 = new java.awt.TextField();
        SET2 = new java.awt.TextField();
        SET3 = new java.awt.TextField();
        SET4 = new java.awt.TextField();
        SET5 = new java.awt.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 0, 0));
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setText("Server Name");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 0, 0)));
        jLabel1.setMaximumSize(new java.awt.Dimension(62, 25));

        jLabel2.setForeground(new java.awt.Color(0, 153, 0));
        jLabel2.setText("Receiver Name");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 0, 0)));

        exitButton.setText("Exit");
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        textField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });
        textField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textField1KeyPressed(evt);
            }
        });

        textField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField2ActionPerformed(evt);
            }
        });

        continueButton.setText("Continue Playing");
	    continueButton.addActionListener(new java.awt.event.ActionListener() {    
        public void actionPerformed(java.awt.event.ActionEvent evt) {
                    continueActionPerformed(evt);
     }
        
});

        startButton.setText("Start New Game");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueActionPerformed(evt);
            }
        });

        label1.setText("Scores");

        firstServe.setBackground(new java.awt.Color(51, 255, 51));
        firstServe.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        firstServe.setForeground(new java.awt.Color(0, 102, 102));
        firstServe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstServeActionPerformed(evt);
            }
        });

        secondServe.setBackground(new java.awt.Color(51, 255, 51));
        secondServe.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        secondServe.setForeground(new java.awt.Color(0, 102, 102));
        secondServe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondServeActionPerformed(evt);
            }
        });

        fifthServe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fifthServeActionPerformed(evt);
            }
        });

        twentiethServe.setBackground(new java.awt.Color(0, 255, 0));
        twentiethServe.setForeground(new java.awt.Color(0, 255, 0));
        twentiethServe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twentiethServeActionPerformed(evt);
            }
        });

        SET1.setBackground(new java.awt.Color(204, 204, 204));
        SET1.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        SET1.setForeground(new java.awt.Color(0, 51, 51));

        SET2.setBackground(new java.awt.Color(204, 204, 204));
        SET2.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        SET2.setForeground(new java.awt.Color(0, 51, 51));

        SET3.setBackground(new java.awt.Color(204, 204, 204));
        SET3.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        SET3.setForeground(new java.awt.Color(0, 51, 51));

        SET4.setBackground(new java.awt.Color(204, 204, 204));
        SET4.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        SET4.setForeground(new java.awt.Color(0, 51, 51));

        SET5.setBackground(new java.awt.Color(204, 204, 204));
        SET5.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        SET5.setForeground(new java.awt.Color(0, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(twentiethServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(secondServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(thirdServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fourthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fifthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sixthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seventhServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eigthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ninthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eleventhServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(twelvthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(thirteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fourteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fifteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sixteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seventeenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eighteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nineteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(SET1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(firstServe, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(340, 340, 340))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(281, 281, 281)
                                    .addComponent(exitButton)
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addComponent(SET2, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SET3, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SET4, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SET5, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(continueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(563, 563, 563))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(22, 22, 22)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(39, 39, 39))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(continueButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(exitButton)))
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(firstServe, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(secondServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thirdServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SET1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SET2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(SET3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SET4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SET5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fourthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fifthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sixthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seventhServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eigthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ninthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eleventhServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(twelvthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thirteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fourteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fifteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sixteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seventeenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eighteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nineteenthServe, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(twentiethServe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(684, 684, 684))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {                                        
        System.exit(0);
    }                                       
	    private void continueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
                                    JButton e =(JButton)(evt.getSource());
		String Name = e.getText();
		if (Name.equals("Start New Game")) {
                    textField1.setText("");
		    textField2.setText(" ");
		    SET1.setText("");
		    SET2.setText("");
		    SET3.setText("");
		    SET4.setText("");
		    SET5.setText("");
                    currentGame.serverCount =0; currentGame.receiverCount=0;
                    SET1.setBackground(Color.WHITE);
                    SET2.setBackground(Color.WHITE);
                    SET3.setBackground(Color.WHITE);
                    SET4.setBackground(Color.WHITE);
                    SET5.setBackground(Color.WHITE);
                    } 
     
                    firstServe.setText("");
                    secondServe.setText("");
		    thirdServe.setText("");
		    fourthServe.setText("");
		    fifthServe.setText("");
		    sixthServe.setText("");
		    seventhServe.setText("");
		    eigthServe.setText("");
		    ninthServe.setText("");
		    tenthServe.setText("");
		    eleventhServe.setText("");
		    twelvthServe.setText("");
		    thirteenthServe.setText("");
		    fourteenthServe.setText("");
		    fifteenthServe.setText("");
		    sixteenthServe.setText("");
		    seventeenthServe.setText("");
		    eighteenthServe.setText("");
		    nineteenthServe.setText("");
		    twentiethServe.setText(" ");
		    
                    
                    if ( (!textField1.getText().isEmpty()) && (!textField2.getText().isEmpty()))
			 {  System.out.println(" Empty "+SET5.getText());
                                                   if (SET5.getText().isEmpty()) {
                                                         TennisSet.playGame();
			 } else {
                                         textField1.addActionListener(new java.awt.event.ActionListener() {
                                                       public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                         textField1ActionPerformed(evt);
                                                       }
                                              });  
                                                   }
    }//GEN-LAST:event_exitButtonMouseClicked
            }
    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
              
                       
            if  ((textField1.getText().equals(""))  || textField1.getText().equals(null)) {
                 t = 1;
                 DisplayFrame(t);
                 textField1.requestFocus();
            } else {     
                 Server = textField1.getText(); System.out.println("Server  "+ Server);
                 serverInitialLength = Server.length();
                 currentGame.playerServer = Server;
	
                 textField2.requestFocus();     
                  closeActionPerformed(DisplayFrame);   
	}}				 
//GEN-LAST:event_textField1ActionPerformed

    private void textField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField2ActionPerformed

                 if ((textField2.getText().length()<= 1)){
                    t = 2;
                    DisplayFrame(t);
                 textField2.requestFocus();
    } else {
               System.out.println("TextField2 "+textField2.getText());
                Receiver = textField2.getText();
             //   System.out.println("Receiver "+ Receiver);
                 receiverInitialLength = Receiver.length();
                 serverInitialLength     = Server.length();
                 currentGame.playerReceiver = Receiver;
               //   System.out.println( "PlayerReceiver "+receiverInitialLength+" "+serverInitialLength);
                  closeActionPerformed(DisplayFrame);   
                 if  (( receiverInitialLength >1 ) &&  (serverInitialLength >1 ))   {            
                         TennisSet.playGame(); 
                         Receiver = "" ; Server = "";
                 }
                 }}
        public static void closeActionPerformed(JFrame DisplayFrame) {
                 // serverCount =0; receiverCount = 0;
                 
                 ErrMessage.setText("");
                  DisplayFrame.setVisible(false);
                 // DisplayFrame.dispatchEvent(new WindowEvent(DisplayFrame, Dialog.WINDOW_CLOSED));
    }
    
    
    
    
  public static void scoresDisplay( String playerServer,String playerReceiver) {
                     int serveCount = Game.serveCount;
                  
                     firstServe.setEditable(false);
                    secondServe.setEditable(false);
                    thirdServe.setEditable(false);
                   fourthServe.setEditable(false);
                   fifthServe.setEditable(false);
                   sixthServe.setEditable(false);
                  seventhServe.setEditable(false);
                  eigthServe.setEditable(false);
                  ninthServe.setEditable(false);
                  tenthServe.setEditable(false);
                  eleventhServe.setEditable(false);
                  twelvthServe.setEditable(false);
                  thirteenthServe.setEditable(false);
                   fourteenthServe.setEditable(false);
                   fifteenthServe.setEditable(false);
                   sixteenthServe.setEditable(false);
                   seventeenthServe.setEditable(false);
                   eighteenthServe.setEditable(false);
                   nineteenthServe.setEditable(false);
                   twentiethServe.setEditable(false);                 
                   
       
                   if (serveCount ==0){                      
                      if (firstServe.getText().isEmpty() ) {
                          firstServe.setText(playerServer+" "+playerReceiver) ;}
                   }
                   
                   if (serveCount ==1){
               //            System.out.println("inside scoreDisplay servecount = 1 "+serveCount+" "+playerServer+" "+playerReceiver);
                       String Scores = TennisSet.gameScores;
                     //  System.out.println("Scores "+ Scores);
                          secondServe.setVisible(true);
                  if (secondServe.getText().isEmpty() ) {
                              secondServe.setText(playerServer+" "+playerReceiver) ;}
                   }
                   
                  if (serveCount ==2) {// && (Game.pointReceiver == 0) || (Game.pointServer == 0 ) && (Game.pointReceiver ==1)) {
    //                    System.out.println("inside scoreDisplay servecount = 2 "+serveCount+" "+playerServer+" "+playerReceiver);
                       String Scores = TennisSet.gameScores;
                  if (thirdServe.getText().isEmpty() ) {
                        thirdServe.setText(playerServer+" "+playerReceiver) ;}
                  }
                  
                   if (serveCount ==3) { 
                      //      String Scores = TennisSet.gameScores;
                       if (fourthServe.getText().isEmpty()) {
                           fourthServe.setText(playerServer+" "+playerReceiver) ;}   
                   }
                   
                     if (serveCount ==4) {// && (Game.pointReceiver == 0) || (Game.pointServer == 0 ) && (Game.pointReceiver ==1)) {
              //          String Scores = TennisSet.gameScores;
                    if (fifthServe.getText().isEmpty()) {
                        fifthServe.setText(playerServer+" "+playerReceiver) ;}
                     }
                     
                     if (serveCount == 5) { 
                            String Scores = TennisSet.gameScores;
                      if (sixthServe.getText().isEmpty()) {
                           sixthServe.setText(playerServer+" "+playerReceiver) ;}
                     }
                       
                      if (serveCount ==6){
               //        String Scores = TennisSet.gameScores;
                     if (seventhServe.getText().isEmpty()) {
                       seventhServe.setText(playerServer+" "+playerReceiver) ;}
                      }
                      
                     if (serveCount == 7) {// && (Game.pointReceiver == 0) || (Game.pointServer == 0 ) && (Game.pointReceiver ==1)) {
                //       String Scores = TennisSet.gameScores;
                    if (eigthServe.getText().isEmpty()) {
                        eigthServe.setText(playerServer+" "+playerReceiver) ;}
                     }
                     
                       if (serveCount == 8) { 
                       //    String Scores = TennisSet.gameScores;
                           if (ninthServe.getText().isEmpty()) {
                           ninthServe.setText(playerServer+" "+playerReceiver) ;}
                       }
                       
                     if (serveCount == 9) { 
                       //    String Scores = TennisSet.gameScores;
                        if (tenthServe.getText().isEmpty()) {
                           tenthServe.setText(playerServer+" "+playerReceiver) ;}
                     }
                   
                   if (serveCount == 10) { 
                       //    String Scores = TennisSet.gameScores;
                   if (eleventhServe.getText().isEmpty()) {
                           eleventhServe.setText(playerServer+" "+playerReceiver) ;}
                   }
                   
                   if (serveCount ==11) { 
                       //    String Scores = TennisSet.gameScores;
                      if (twelvthServe.getText().isEmpty()) {
                           twelvthServe.setText(playerServer+" "+playerReceiver) ;}
                   }
                   
                  if (serveCount == 12) { 
                       //    String Scores = TennisSet.gameScores;
                        if (thirteenthServe.getText().isEmpty()) {
                           thirteenthServe.setText(playerServer+" "+playerReceiver) ;}
                  }
                   
                    if (serveCount == 13) { 
                       //    String Scores = TennisSet.gameScores;
                        if (fourteenthServe.getText().isEmpty()) {
                            fourteenthServe.setText(playerServer+" "+playerReceiver) ;}
                   }
                                     
                   if (serveCount == 14) { 
                       //    String Scores = TennisSet.gameScores;
                        if (fifteenthServe.getText().isEmpty()) {
                           fifteenthServe.setText(playerServer+" "+playerReceiver) ;}
                   }
                 if (serveCount == 15) { 
                       //    String Scores = TennisSet.gameScores;
                      if (sixteenthServe.getText().isEmpty()) {
                           sixteenthServe.setText(playerServer+" "+playerReceiver) ;}
                 }
                  if (serveCount == 16) { 
                       if (seventeenthServe.getText().isEmpty()) {
                           seventeenthServe.setText(playerServer+" "+playerReceiver) ;}
                  }                
                    if (serveCount == 17) { 
                             if (eighteenthServe.getText().isEmpty()) {
                           eighteenthServe.setText(playerServer+" "+playerReceiver) ;}
                    }
                     if (serveCount == 18) { 
                       if (nineteenthServe.getText().isEmpty()) {
                           nineteenthServe.setText(playerServer+" "+playerReceiver) ;}
                     }
                   if (serveCount == 19) { 
                        if (twentiethServe.getText().isEmpty()) {
                           twentiethServe.setText(playerServer+" "+playerReceiver) ;}
                   }
                   
             //          System.out.println("Game Winner "+Game.Winner);
                     //   textField21.setText("\n"+Game.Winner + "\n");
                        
              
    }//GEN-LAST:event_textField2ActionPerformed

   // private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
   //     // TODO add your handling code here:
  //  }                                           
  //  private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
  //      // TODO add your handling code here:
  //   }//GEN-LAST:event_startButtonActionPerformed
    private void textField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField1KeyPressed
 
    }//GEN-LAST:event_textField1KeyPressed

    private void fifthServeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fifthServeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fifthServeActionPerformed

    private void twentiethServeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twentiethServeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_twentiethServeActionPerformed

    private void secondServeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondServeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secondServeActionPerformed
   private void firstServeActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }
   /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
                
            }
        });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static java.awt.TextField SET1;    
    public static java.awt.TextField SET2;
    public static java.awt.TextField SET3;
    public static java.awt.TextField SET4;
    public static java.awt.TextField SET5;
    private javax.swing.JButton continueButton;
    private static java.awt.TextField eighteenthServe;
    private static java.awt.TextField eigthServe;
    private static java.awt.TextField eleventhServe;
    private javax.swing.JButton exitButton;
    private static java.awt.TextField fifteenthServe;
    private static java.awt.TextField fifthServe;
    private static java.awt.TextField firstServe;
    private static java.awt.TextField fourteenthServe;
    private static java.awt.TextField fourthServe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private java.awt.Label label1;
    private java.util.List list1;
    private static java.awt.TextField nineteenthServe;
    private static java.awt.TextField ninthServe;
    private javax.persistence.Query query1;
    private static java.awt.TextField secondServe;
    private static java.awt.TextField seventeenthServe;
    private static java.awt.TextField seventhServe;
    private static java.awt.TextField sixteenthServe;
    private static java.awt.TextField sixthServe;
    private javax.swing.JButton startButton;
    private static java.awt.TextField tenthServe;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    private static java.awt.TextField thirdServe;
    private static java.awt.TextField thirteenthServe;
    private static java.awt.TextField twelvthServe;
    private static java.awt.TextField twentiethServe;
    // End of variables declaration//GEN-END:variables


public static void DisplayFrame (int t) {



              DisplayFrame.setSize(330,100);
               DisplayFrame.setLocation(450, 170);
              
               Font fnt = new Font("Copperplate Gothic Bold",Font.BOLD,15);
               ErrMessage.setFont(fnt);
               ErrMessage.setSize(250,450);
               DisplayFrame.setLayout(new GridLayout());
               DisplayFrame.setLayout(new GridLayout(3,200));
               DisplayFrame.add(ErrMessage);
             //  DisplayFrame.setLayout(new GridLayout(3,300));
              
              
              // DisplayFrame.add(ErrMessage);
             //  Font fnt = new Font("Copperplate Gothic Bold",Font.BOLD,20);
             //  ErrMessage.setFont(fnt);
               if (t == 1) {
                   ErrMessage.setText("Please enter the Server Name");
               } 
               if (t==2) {
               ErrMessage.setText("Please enter the Receiver Name");}
               
               ErrMessage.setLocation(100,100);
               Close.setVisible(true);
               ErrMessage.setVisible(true);
               DisplayFrame.setAlwaysOnTop(true);
               DisplayFrame.add(ErrMessage);
               DisplayFrame.add(Close);
               DisplayFrame.setVisible(true);           

               Close.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                   closeActionPerformed(DisplayFrame);   
               }
              });
}
}